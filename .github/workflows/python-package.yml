# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Create release

on: [push]

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Generate release tag
        id: tag
        run: |
          echo "::set-output name=release_tag::UserBuild_$(date +"%Y.%m.%d_%H-%M")"
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
           name: ${{ github.ref_name }}
           tag_name: ${{ steps.tag.outputs.release_tag }}
           draft: false
           prerelease: false
#           body_path: RELEASE_NOTES.md
  build_release:
    name: Build Release
    needs: create_release
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            release_suffix: ubuntu
          - os: macos-latest
            release_suffix: mac
          - os: windows-latest
            release_suffix: windows
        python-version: ["3.5"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
      - name: Test with pytest
        run: |
          python -m unittest discover -s pyHW//tests -t pyHW/tests
      - name: Run Linux Build
        if: matrix.os == 'ubuntu-latest'
        run: |
           python -m PyInstaller --noconsole --onefile pyHW/app.spec
           echo "$PWD"
      - name: Run Windows Build
        if: matrix.os == 'windows-latest'
        run: |
            python -m PyInstaller --noconsole --onefile pyHW/app.spec
            echo "$PWD"
      - name: Upload artifacs
        uses: actions/upload-artifact@v3
        with:
            name: app
            path: dist
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.create_release.outputs.tag-name }}
          files: release_${{ matrix.release_suffix }}
          asset_path: dist/app
          asset_name: app_${{ matrix.release_suffix }}
          asset_content_type: application/gzip