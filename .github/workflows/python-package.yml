# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package
on: [push]
jobs:
  build:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [windows-latest]
        python-version: ["3.5"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .
    - name: Test with pytest
      run: |
        python -m unittest discover -s pyHW//tests -t pyHW/tests
    - name: Build executable
      run: |
        python -m PyInstaller --noconsole --onefile pyHW/app.spec
        echo "$PWD"
    - uses: actions/upload-artifact@v3
      with:
          name: app
          path: dist
    - name: version
      run: echo "::set-output name=version::1.0.0"
      id: version
    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ steps.version.outputs.version }}
        tag_name: ${{ github.ref }}
        body_path: README.md
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: upload windows artefact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/app.exe
        asset_name: app.exe
        asset_content_type: application/gzip